<form onsubmit="sendForm(this); return false;" action="/registration" method="post">
    <div class="mb-3">
        <input name="name" type="text" class="form-control" placeholder="Name">
    </div>
    <div class="mb-3">
        <input name="surname" type="text" class="form-control" placeholder="surname">
    </div>
    <div class="mb-3">
        <input name="email" type="text" class="form-control" placeholder="email">
        <p id="emailError" class="text-danger" hidden> Пользователь с таким почтовым адресом уже существует </p>
    </div>
    <div class="mb-3">
        <input name="password" type="password" class="form-control" placeholder="password">
    </div>
    <div class="mb-3">
        <input type="submit" class="btn btn-primary form-control" placeholder="password">
    </div>
</form>

<script>
    const emailError = document.getElementById('emailError');
    function sendForm(form) {
        emailError.hidden = true;
        let formData = new FormData(form);
        fetch('/registration', {
            method: 'post',
            body: formData
        }).then(response=>response.json()) 
        .then(result => {
            if(result.result == 'success') {
                location.href = '/auth';
            } else {
                emailError.hidden = false;
            }
        })
    }
</script>

{{!--
        ======= ИНСТРУКЦИЯ =======
    1) Формируем форму, в которой указываем name для каждого инпута;
    2) Чтобы страница не перезагружалась и могла сразу нас оповестить что: 
        а) такой логин уже есть
        б) пароль не верный
        в) и тд
    нам необходимо использовать JS и создаем функцию 
    3) для отправки запросов используем - fetch, указывая адрес, куда собираемся направиться, после указываем метод
    4) откуда мы их берем: объект FormData, который может собрать все наши данные. 
        FormData формирует объект, в котором находятся пары ключ-значение. В тэге form мы указывали name - это и будет ключем в объекте, а значением будет то, что мы ввели
    5) Вызов функции необходим когда нужно отправить данные формы, для этого связываем нашу форму и функцию через триггер - onsubmit. Однако даже при этом страница будет перезагружаться, чтобы этого не происходило используем return false. Это прервет его стандартное поведение. В саму функцию необходимо отметить, что это событие для ЭТОГО элемента, для этого в параметр функции в тэге form передаем "this", а в функцию саму передаем form.
--}}